Program.Sub.ScreenSU.Start
Gui.FormHeatImport..Create(BaseForm)
Gui.FormHeatImport..Caption("Custom Heat Data Import")
Gui.FormHeatImport..Size(6525,1515)
Gui.FormHeatImport..MinX(0)
Gui.FormHeatImport..MinY(0)
Gui.FormHeatImport..Position(0,0)
Gui.FormHeatImport..BackColor(-2147483633)
Gui.FormHeatImport..MousePointer(0)
Gui.FormHeatImport..Event(UnLoad,FormHeatImport_UnLoad)
Gui.FormHeatImport..AlwaysOnTop(False)
Gui.FormHeatImport..FontName("Tahoma")
Gui.FormHeatImport..FontSize(8.25)
Gui.FormHeatImport..ControlBox(True)
Gui.FormHeatImport..MaxButton(True)
Gui.FormHeatImport..MinButton(True)
Gui.FormHeatImport..Moveable(True)
Gui.FormHeatImport..Sizeable(True)
Gui.FormHeatImport..ShowInTaskBar(True)
Gui.FormHeatImport..TitleBar(True)
Gui.FormHeatImport.lblHeatImport.Create(Label,"Select Excel File From Vendor",True,5325,255,0,105,225,True,0,"Arial",8,-2147483633,0,0)
Gui.FormHeatImport.lblHeatImport.BorderStyle(0)
Gui.FormHeatImport.cmdFileBrowser.Create(Button)
Gui.FormHeatImport.cmdFileBrowser.Size(480,420)
Gui.FormHeatImport.cmdFileBrowser.Position(5745,450)
Gui.FormHeatImport.cmdFileBrowser.Caption("^")
Gui.FormHeatImport.cmdFileBrowser.Event(Click,cmdFileBrowser_Click)
Gui.FormHeatImport.cmdFileBrowser.Enabled(True)
Gui.FormHeatImport.cmdFileBrowser.Visible(True)
Gui.FormHeatImport.cmdFileBrowser.Zorder(0)
Gui.FormHeatImport.cmdFileBrowser.FontName("Tahoma")
Gui.FormHeatImport.cmdFileBrowser.FontSize(8.25)
Gui.FormHeatImport.lvw1.Create(ListView)
Gui.FormHeatImport.lvw1.Size(5550,390)
Gui.FormHeatImport.lvw1.Position(105,465)
Gui.FormHeatImport.lvw1.View(0)
Gui.FormHeatImport.lvw1.Event(OLEDragDrop,lvw1_OLEDragDrop)
Gui.FormHeatImport.lvw1.Enabled(True)
Gui.FormHeatImport.lvw1.Visible(True)
Gui.FormHeatImport.lvw1.Zorder(0)
Gui.FormHeatImport.lvw1.FontName("Tahoma")
Gui.FormHeatImport.lvw1.FontSize(8)
Gui.FormHeatImport.lvw1.Multiselect(False)
Gui.FormHeatImport.lvw1.CheckBoxes(False)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bOpen.Declare(Boolean,False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	V.Local.bExcel.Declare(String,"")

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	
	F.Intrinsic.Control.If(V.Local.bExcel)
		'show the form
		Gui.FormHeatImport..Show
		Gui.FormHeatImport..AlwaysOnTop(True)
		Gui.FormHeatImport..AlwaysOnTop(False)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Excel Needs to be Installed to run this menu item","Attention")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub(FormHeatImport_Unload)
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.FormHeatImport_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	
	'check to see if connection is still open
	F.Intrinsic.Control.If(V.Global.bOpen)
		V.Global.bOpen.Set(False)
		F.ODBC.Connection!Con.Close
	F.Intrinsic.Control.EndIf
	'end the program
	F.Intrinsic.Control.End
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.FormHeatImport_UnLoad.End

Program.Sub.lvw1_OLEDragDrop.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	
	'passing file location when user drops file in list view
	F.Intrinsic.Control.CallSub(Process_Files,"Files",V.Args.Files)
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub(FormHeatImport_Unload)
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.lvw1_OLEDragDrop.End

Program.Sub.Process_Files.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	V.Local.i.Declare(Long,0)
	V.Local.sFiles.Declare(String,"")
	V.Local.sMsg.Declare(String,"")
	V.Local.sFileType.Declare(String,"")
	V.Local.sFileContent.Declare(String,"")
	V.Local.iC.Declare(Long,0)
	V.Local.fCost.Declare(Float,0)
	V.Local.sSql.Declare(String,"")
	V.Local.sFilter.Declare(String,"")
	V.Local.sClose.Declare(String,"N")
	V.Local.sRet.Declare(String,"")
	V.Local.fQtyRem.Declare(Float,0)
	
	'listview allows multlipe files to be droped in
	'spliting the argument to process each file seperately
	F.Intrinsic.String.Split(V.Args.Files,"*!*",V.Local.sFiles)
	
	'looping through file liist
	F.Intrinsic.Control.For(V.Local.i,0,V.Local.sFiles.UBound,1)	
		V.Local.sFileType.Set(V.Local.sFiles(V.Local.i).Right4)
		F.Intrinsic.Control.If(V.Local.sFileType.UCase,=,"XLSX")
			F.Intrinsic.UI.InvokeWaitDialog("Parsing Excel File.......................")

			F.Intrinsic.Control.CallSub(Parse_File,"FileName",V.Local.sFiles(V.Local.i))

			F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.Else
			V.Local.sFileType.Set(V.Local.sFileType.Right3)
			F.Intrinsic.Control.If(V.Local.sFileType.UCase,=,"XLS")
				F.Intrinsic.UI.InvokeWaitDialog("Parsing Excel File.......................")

				F.Intrinsic.Control.CallSub(Parse_File,"FileName",V.Local.sFiles(V.Local.i))
				
				F.Intrinsic.UI.CloseWaitDialog
			F.Intrinsic.Control.Else
				'letting user know that the file choosen was not a csv
				F.Intrinsic.String.Build("{0} file must be a Excel file to be processed",V.Local.sFiles(V.Local.i),V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Attention")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub(FormHeatImport_Unload)
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.Process_Files.End

Program.Sub.cmdFileBrowser_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	V.Local.sRet.Declare(String,"")
	
	'when selecting from the browser only show csv files
	F.Intrinsic.UI.ShowOpenFileDialog("","XLSX [.xlsx]|*.xlsx","",V.Local.sRet)
	'checking to see if a file was chosen
	F.Intrinsic.Control.If(V.Local.sRet.Length,>,0,"AND",V.Local.sRet.UCase,<>,"***CANCEL***")
		'passing file location when user drops file in list view
		F.Intrinsic.Control.CallSub(Process_Files,"Files",V.Local.sRet)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub(FormHeatImport_Unload)
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.cmdFileBrowser_Click.End

Program.Sub.Parse_File.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare(String,"")
	V.Local.sFileContent.Declare(String,"")
	V.Local.sSheets.Declare(String,"")
	V.Local.sSheetInfo.Declare(String,"")
	V.Local.sData.Declare(String,"")
	V.Local.sID.Declare(String,"")
	V.Local.i.Declare(Long,0)
	V.Local.iC.Declare(Long,0)
'	V.Local.sFields.Declare(String,"PO,Heat,Material,C,MN,P,S,SI,CU,NI,CR,MO,V,NB,CE,Tensile_MPA,Yield_MPA,Per_El,Per_Ra,HB,Test_1,Test_2,Test_3,Average")
	V.Local.sFields.Declare(String,"Heat,Material,C,MN,P,S,SI,CU,NI,CR,MO,V,NB,Tensile_MPA,Yield_MPA,Per_El,Per_Ra,HB,Test_1,Test_2,Test_3,Average")
	V.Local.sRecDate.Declare(String,"")
	V.Local.sFilter.Declare(String,"")
	V.Local.sLine.Declare(String,"")
	V.Local.sSql.Declare(String,"")
	V.Local.sRet.Declare(String,"")
	V.Local.sMTR.Declare(String,"")
	V.Local.sPO.Declare(String,"")
	
	F.Intrinsic.String.Format(V.Ambient.Date,"YYMMDD",V.Local.sRecDate)
	
	F.Intrinsic.String.Split(V.Local.sFields,",",V.Local.sFields)
	
	F.ODBC.Connection!Con.OpenCompanyConnection(999)
	V.Global.bOpen.Set(True)
	
	F.Automation.MSExcel.ReadSpreadsheet(V.Args.FileName,V.Local.sFileContent)
	
	F.Intrinsic.String.Split(V.Local.sFileContent,"&^&",V.Local.sSheets)
	
	F.Intrinsic.String.Split(V.Local.sSheets(0),"$!$",V.Local.sSheetInfo)

	F.Data.DataTable.CreateFromSQL("Heat",con,"Select * From GCG_6936_Heat_Chem Where Heat = '-22e2klsjelk'",True)

	F.Intrinsic.Control.For(V.Local.i,1,V.Local.sSheetInfo.UBound,1)
		F.Intrinsic.String.Split(V.Local.sSheetInfo(V.Local.i),"*!*",V.Local.sData)
		F.Intrinsic.Control.If(V.Local.sData(0).Trim,<>,"","AND",V.Local.sData(1).Trim,<>,"")
			V.Local.sData.Set(V.Local.sData.UCase)
			V.Local.sRet.Set(V.Local.sData.Left4)
			F.Intrinsic.Control.If(V.Local.sData.UCase,<>,"HEAT")
				F.Data.DataTable.AddRow("Heat","Heat",V.Local.sData(0).Trim,"Material",V.Local.sData(1).Trim)
				F.Intrinsic.Control.For(V.Local.iC,2,21,1)
					F.Intrinsic.Control.If(V.Local.sData(V.Local.iC).Trim,<>,"")
						F.Data.DataTable.SetValue("Heat",V.DataTable.Heat.RowCount--,V.Local.sFields(V.Local.iC),V.Local.sData(V.Local.iC).Float)
					F.Intrinsic.Control.Else
						F.Data.DataTable.SetValue("Heat",V.DataTable.Heat.RowCount--,V.Local.sFields(V.Local.iC),V.Ambient.DBNULL)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Next(V.Local.iC)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)

	F.Intrinsic.UI.ChangeWaitStatus("Saving Heat Info.................")
	F.Intrinsic.Control.If(V.DataTable.Heat.RowCount--,<>,-1)
		F.Data.DataTable.SaveToDB("Heat",con,"GCG_6936_Heat_Chem","Heat",256,"Heat@!@Heat*!*Material@!@Material*!*C@!@C*!*MN@!@MN*!*P@!@P*!*S@!@S*!*SI@!@SI*!*CU@!@CU*!*NI@!@NI*!*CR@!@CR*!*MO@!@MO*!*V@!@V*!*NB@!@NB*!*Tensile_MPA@!@Tensile_MPA*!*Yield_MPA@!@Yield_MPA*!*Per_El@!@Per_El*!*Per_Ra@!@Per_Ra*!*HB@!@HB*!*Test_1@!@Test_1*!*Test_2@!@Test_2*!*Test_3@!@Test_3*!*Average@!@Average")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.Close("Heat")
	
	F.ODBC.Connection!Con.Close
	V.Global.bOpen.Set(False)
	
	F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}","GCG_6936_Heat_Chem.g2u",V.Ambient.NewLine,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub(FormHeatImport_Unload)
	F.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndTry
Program.Sub.Parse_File.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$rking$}$20230927113822675$}$QNdZLVy4bWuiWa9jh1ZTiKHvMPldSPXeg5tnYWgTB0e3Z2+qEcLQgyiDiEpqh863IKD+/e5K5Yw=
Program.Sub.Comments.End